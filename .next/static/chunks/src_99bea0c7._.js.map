{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 407, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,qKAAA,CAAA,QAAqB;YACpB,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKV;KArBS","debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,6LAAC,wKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBS","debugId":null}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 596, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/system-monitor.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Progress } from '@/components/ui/progress'\nimport { Badge } from '@/components/ui/badge'\n\ninterface SystemMetrics {\n  cpu: number\n  memory: number\n  disk: number\n  network: number\n  processes: number\n  uptime: string\n  temperature: number\n}\n\ninterface ProcessInfo {\n  name: string\n  pid: number\n  cpu: number\n  memory: number\n  status: 'running' | 'sleeping' | 'zombie'\n}\n\nexport function SystemMonitor() {\n  const [metrics, setMetrics] = useState<SystemMetrics>({\n    cpu: 0,\n    memory: 0,\n    disk: 0,\n    network: 0,\n    processes: 0,\n    uptime: '0:00:00',\n    temperature: 0\n  })\n\n  const [processes, setProcesses] = useState<ProcessInfo[]>([])\n  const [lastUpdate, setLastUpdate] = useState<Date>(new Date())\n\n  // Simulate realistic system monitoring\n  useEffect(() => {\n    const updateMetrics = () => {\n      // Simulate realistic CPU usage with some variance\n      const baseCpu = 15 + Math.sin(Date.now() / 10000) * 10\n      const cpuSpike = Math.random() > 0.95 ? Math.random() * 40 : 0\n      \n      // Simulate memory usage that gradually increases\n      const baseMemory = 45 + Math.sin(Date.now() / 20000) * 15\n      \n      // Simulate disk usage (more stable)\n      const baseDisk = 65 + Math.sin(Date.now() / 50000) * 5\n      \n      // Simulate network connections\n      const networkConnections = Math.floor(20 + Math.random() * 30)\n      \n      // Simulate process count\n      const processCount = Math.floor(150 + Math.random() * 50)\n      \n      // Calculate uptime\n      const uptimeMs = Date.now() - (Date.now() - Math.random() * 86400000)\n      const uptimeHours = Math.floor(uptimeMs / 3600000)\n      const uptimeMinutes = Math.floor((uptimeMs % 3600000) / 60000)\n      const uptimeSeconds = Math.floor((uptimeMs % 60000) / 1000)\n      \n      // Simulate temperature\n      const temperature = 35 + Math.random() * 25\n\n      setMetrics({\n        cpu: Math.min(100, Math.max(0, baseCpu + cpuSpike)),\n        memory: Math.min(100, Math.max(0, baseMemory)),\n        disk: Math.min(100, Math.max(0, baseDisk)),\n        network: networkConnections,\n        processes: processCount,\n        uptime: `${uptimeHours}:${uptimeMinutes.toString().padStart(2, '0')}:${uptimeSeconds.toString().padStart(2, '0')}`,\n        temperature: Math.round(temperature)\n      })\n\n      // Simulate top processes\n      const sampleProcesses: ProcessInfo[] = [\n        { name: 'chrome', pid: 1234, cpu: Math.random() * 15, memory: Math.random() * 20, status: 'running' },\n        { name: 'node', pid: 5678, cpu: Math.random() * 10, memory: Math.random() * 15, status: 'running' },\n        { name: 'systemd', pid: 1, cpu: Math.random() * 2, memory: Math.random() * 5, status: 'running' },\n        { name: 'firefox', pid: 9012, cpu: Math.random() * 12, memory: Math.random() * 18, status: 'running' },\n        { name: 'code', pid: 3456, cpu: Math.random() * 8, memory: Math.random() * 12, status: 'running' }\n      ]\n\n      setProcesses(sampleProcesses)\n      setLastUpdate(new Date())\n    }\n\n    updateMetrics()\n    const interval = setInterval(updateMetrics, 2000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  const getStatusColor = (value: number, type: 'cpu' | 'memory' | 'disk' | 'temp') => {\n    const thresholds = {\n      cpu: { warning: 70, critical: 90 },\n      memory: { warning: 80, critical: 95 },\n      disk: { warning: 85, critical: 95 },\n      temp: { warning: 70, critical: 85 }\n    }\n\n    const threshold = thresholds[type]\n    if (value >= threshold.critical) return 'text-red-500'\n    if (value >= threshold.warning) return 'text-yellow-500'\n    return 'text-green-500'\n  }\n\n  const getProgressColor = (value: number, type: 'cpu' | 'memory' | 'disk' | 'temp') => {\n    const thresholds = {\n      cpu: { warning: 70, critical: 90 },\n      memory: { warning: 80, critical: 95 },\n      disk: { warning: 85, critical: 95 },\n      temp: { warning: 70, critical: 85 }\n    }\n\n    const threshold = thresholds[type]\n    if (value >= threshold.critical) return 'bg-red-500'\n    if (value >= threshold.warning) return 'bg-yellow-500'\n    return 'bg-green-500'\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* System Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-400\">CPU Usage</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className={`text-2xl font-bold ${getStatusColor(metrics.cpu, 'cpu')}`}>\n              {metrics.cpu.toFixed(1)}%\n            </div>\n            <Progress \n              value={metrics.cpu} \n              className=\"mt-2\"\n            />\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-400\">Memory Usage</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className={`text-2xl font-bold ${getStatusColor(metrics.memory, 'memory')}`}>\n              {metrics.memory.toFixed(1)}%\n            </div>\n            <Progress \n              value={metrics.memory} \n              className=\"mt-2\"\n            />\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-400\">Disk Usage</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className={`text-2xl font-bold ${getStatusColor(metrics.disk, 'disk')}`}>\n              {metrics.disk.toFixed(1)}%\n            </div>\n            <Progress \n              value={metrics.disk} \n              className=\"mt-2\"\n            />\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-400\">Temperature</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className={`text-2xl font-bold ${getStatusColor(metrics.temperature, 'temp')}`}>\n              {metrics.temperature}°C\n            </div>\n            <Progress \n              value={(metrics.temperature / 100) * 100} \n              className=\"mt-2\"\n            />\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* System Information */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardHeader>\n            <CardTitle>System Information</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-400\">Network Connections:</span>\n              <span className=\"font-medium\">{metrics.network}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-400\">Running Processes:</span>\n              <span className=\"font-medium\">{metrics.processes}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-400\">System Uptime:</span>\n              <span className=\"font-medium\">{metrics.uptime}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-400\">Last Update:</span>\n              <span className=\"font-medium\">{lastUpdate.toLocaleTimeString()}</span>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardHeader>\n            <CardTitle>Top Processes</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {processes.map((process) => (\n                <div key={process.pid} className=\"flex items-center justify-between p-2 bg-gray-800 rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div>\n                      <p className=\"font-medium\">{process.name}</p>\n                      <p className=\"text-xs text-gray-400\">PID: {process.pid}</p>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <div className=\"flex space-x-2\">\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        CPU: {process.cpu.toFixed(1)}%\n                      </Badge>\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        MEM: {process.memory.toFixed(1)}%\n                      </Badge>\n                    </div>\n                    <Badge \n                      variant={process.status === 'running' ? 'default' : 'secondary'}\n                      className=\"text-xs mt-1\"\n                    >\n                      {process.status}\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1260, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/network-monitor.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { Progress } from '@/components/ui/progress'\n\ninterface NetworkConnection {\n  id: string\n  localAddress: string\n  localPort: number\n  remoteAddress: string\n  remotePort: number\n  protocol: 'TCP' | 'UDP'\n  state: 'ESTABLISHED' | 'LISTENING' | 'TIME_WAIT' | 'CLOSE_WAIT'\n  process: string\n  riskLevel: 'low' | 'medium' | 'high' | 'critical'\n  country: string\n  timestamp: string\n}\n\ninterface NetworkStats {\n  totalConnections: number\n  establishedConnections: number\n  listeningPorts: number\n  suspiciousConnections: number\n  blockedConnections: number\n  bytesIn: number\n  bytesOut: number\n}\n\nexport function NetworkMonitor() {\n  const [connections, setConnections] = useState<NetworkConnection[]>([])\n  const [stats, setStats] = useState<NetworkStats>({\n    totalConnections: 0,\n    establishedConnections: 0,\n    listeningPorts: 0,\n    suspiciousConnections: 0,\n    blockedConnections: 0,\n    bytesIn: 0,\n    bytesOut: 0\n  })\n  const [monitoring, setMonitoring] = useState(true)\n  const [filter, setFilter] = useState<'all' | 'suspicious' | 'established'>('all')\n\n  // Simulate network monitoring\n  useEffect(() => {\n    if (!monitoring) return\n\n    const updateConnections = () => {\n      // Generate realistic network connections\n      const sampleConnections: NetworkConnection[] = [\n        {\n          id: '1',\n          localAddress: '192.168.1.100',\n          localPort: 443,\n          remoteAddress: '142.250.191.14',\n          remotePort: 443,\n          protocol: 'TCP',\n          state: 'ESTABLISHED',\n          process: 'chrome.exe',\n          riskLevel: 'low',\n          country: 'US',\n          timestamp: new Date().toISOString()\n        },\n        {\n          id: '2',\n          localAddress: '192.168.1.100',\n          localPort: 80,\n          remoteAddress: '104.16.249.249',\n          remotePort: 80,\n          protocol: 'TCP',\n          state: 'ESTABLISHED',\n          process: 'firefox.exe',\n          riskLevel: 'low',\n          country: 'US',\n          timestamp: new Date().toISOString()\n        },\n        {\n          id: '3',\n          localAddress: '192.168.1.100',\n          localPort: 22,\n          remoteAddress: '0.0.0.0',\n          remotePort: 0,\n          protocol: 'TCP',\n          state: 'LISTENING',\n          process: 'sshd',\n          riskLevel: 'medium',\n          country: 'Local',\n          timestamp: new Date().toISOString()\n        },\n        {\n          id: '4',\n          localAddress: '192.168.1.100',\n          localPort: Math.floor(Math.random() * 65535),\n          remoteAddress: `${Math.floor(Math.random() * 255)}.${Math.floor(Math.random() * 255)}.${Math.floor(Math.random() * 255)}.${Math.floor(Math.random() * 255)}`,\n          remotePort: Math.floor(Math.random() * 65535),\n          protocol: Math.random() > 0.5 ? 'TCP' : 'UDP',\n          state: Math.random() > 0.5 ? 'ESTABLISHED' : 'TIME_WAIT',\n          process: ['node.exe', 'python.exe', 'java.exe', 'nginx'][Math.floor(Math.random() * 4)],\n          riskLevel: Math.random() > 0.8 ? 'high' : Math.random() > 0.6 ? 'medium' : 'low',\n          country: ['US', 'UK', 'DE', 'JP', 'CN'][Math.floor(Math.random() * 5)],\n          timestamp: new Date().toISOString()\n        }\n      ]\n\n      // Add some random connections\n      for (let i = 0; i < Math.floor(Math.random() * 10) + 5; i++) {\n        sampleConnections.push({\n          id: `${i + 5}`,\n          localAddress: '192.168.1.100',\n          localPort: Math.floor(Math.random() * 65535),\n          remoteAddress: `${Math.floor(Math.random() * 255)}.${Math.floor(Math.random() * 255)}.${Math.floor(Math.random() * 255)}.${Math.floor(Math.random() * 255)}`,\n          remotePort: Math.floor(Math.random() * 65535),\n          protocol: Math.random() > 0.7 ? 'UDP' : 'TCP',\n          state: ['ESTABLISHED', 'TIME_WAIT', 'CLOSE_WAIT'][Math.floor(Math.random() * 3)] as any,\n          process: ['chrome.exe', 'firefox.exe', 'node.exe', 'python.exe', 'system'][Math.floor(Math.random() * 5)],\n          riskLevel: Math.random() > 0.9 ? 'critical' : Math.random() > 0.7 ? 'high' : Math.random() > 0.5 ? 'medium' : 'low',\n          country: ['US', 'UK', 'DE', 'FR', 'JP', 'CN', 'RU'][Math.floor(Math.random() * 7)],\n          timestamp: new Date().toISOString()\n        })\n      }\n\n      setConnections(sampleConnections)\n\n      // Update stats\n      const established = sampleConnections.filter(c => c.state === 'ESTABLISHED').length\n      const listening = sampleConnections.filter(c => c.state === 'LISTENING').length\n      const suspicious = sampleConnections.filter(c => c.riskLevel === 'high' || c.riskLevel === 'critical').length\n\n      setStats({\n        totalConnections: sampleConnections.length,\n        establishedConnections: established,\n        listeningPorts: listening,\n        suspiciousConnections: suspicious,\n        blockedConnections: Math.floor(Math.random() * 5),\n        bytesIn: Math.floor(Math.random() * 1000000),\n        bytesOut: Math.floor(Math.random() * 500000)\n      })\n    }\n\n    updateConnections()\n    const interval = setInterval(updateConnections, 3000)\n\n    return () => clearInterval(interval)\n  }, [monitoring])\n\n  const getRiskColor = (risk: string) => {\n    switch (risk) {\n      case 'critical': return 'bg-red-500'\n      case 'high': return 'bg-orange-500'\n      case 'medium': return 'bg-yellow-500'\n      case 'low': return 'bg-green-500'\n      default: return 'bg-gray-500'\n    }\n  }\n\n  const getStateColor = (state: string) => {\n    switch (state) {\n      case 'ESTABLISHED': return 'bg-green-500'\n      case 'LISTENING': return 'bg-blue-500'\n      case 'TIME_WAIT': return 'bg-yellow-500'\n      case 'CLOSE_WAIT': return 'bg-orange-500'\n      default: return 'bg-gray-500'\n    }\n  }\n\n  const filteredConnections = connections.filter(conn => {\n    switch (filter) {\n      case 'suspicious':\n        return conn.riskLevel === 'high' || conn.riskLevel === 'critical'\n      case 'established':\n        return conn.state === 'ESTABLISHED'\n      default:\n        return true\n    }\n  })\n\n  const formatBytes = (bytes: number) => {\n    if (bytes === 0) return '0 B'\n    const k = 1024\n    const sizes = ['B', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Network Status Alert */}\n      <Alert className={`${monitoring ? 'bg-green-900/20 border-green-800' : 'bg-red-900/20 border-red-800'}`}>\n        <AlertDescription>\n          Network monitoring is {monitoring ? 'active' : 'inactive'}. \n          {monitoring && ' Analyzing traffic patterns and detecting suspicious connections in real-time.'}\n        </AlertDescription>\n      </Alert>\n\n      {/* Control Panel */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex space-x-2\">\n          <Button\n            variant={filter === 'all' ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => setFilter('all')}\n          >\n            All Connections\n          </Button>\n          <Button\n            variant={filter === 'established' ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => setFilter('established')}\n          >\n            Established\n          </Button>\n          <Button\n            variant={filter === 'suspicious' ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => setFilter('suspicious')}\n          >\n            Suspicious\n          </Button>\n        </div>\n        <Button\n          variant={monitoring ? 'destructive' : 'default'}\n          size=\"sm\"\n          onClick={() => setMonitoring(!monitoring)}\n        >\n          {monitoring ? 'Stop Monitoring' : 'Start Monitoring'}\n        </Button>\n      </div>\n\n      {/* Network Statistics */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-7 gap-4\">\n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-blue-500\">{stats.totalConnections}</div>\n            <p className=\"text-xs text-gray-400\">Total</p>\n          </CardContent>\n        </Card>\n        \n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-green-500\">{stats.establishedConnections}</div>\n            <p className=\"text-xs text-gray-400\">Established</p>\n          </CardContent>\n        </Card>\n        \n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-yellow-500\">{stats.listeningPorts}</div>\n            <p className=\"text-xs text-gray-400\">Listening</p>\n          </CardContent>\n        </Card>\n        \n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-red-500\">{stats.suspiciousConnections}</div>\n            <p className=\"text-xs text-gray-400\">Suspicious</p>\n          </CardContent>\n        </Card>\n        \n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-red-600\">{stats.blockedConnections}</div>\n            <p className=\"text-xs text-gray-400\">Blocked</p>\n          </CardContent>\n        </Card>\n        \n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-lg font-bold text-cyan-500\">{formatBytes(stats.bytesIn)}</div>\n            <p className=\"text-xs text-gray-400\">Bytes In</p>\n          </CardContent>\n        </Card>\n        \n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-lg font-bold text-purple-500\">{formatBytes(stats.bytesOut)}</div>\n            <p className=\"text-xs text-gray-400\">Bytes Out</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Active Connections */}\n      <Card className=\"bg-gray-900 border-gray-800\">\n        <CardHeader>\n          <CardTitle>Active Network Connections</CardTitle>\n          <CardDescription>\n            Real-time network connection monitoring with threat assessment\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n            {filteredConnections.map((connection) => (\n              <div key={connection.id} className=\"flex items-center justify-between p-3 bg-gray-800 rounded-lg\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className={`w-3 h-3 rounded-full ${getRiskColor(connection.riskLevel)}`} />\n                  <div>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"font-medium\">{connection.process}</span>\n                      <Badge variant=\"outline\" className={getStateColor(connection.state)}>\n                        {connection.state}\n                      </Badge>\n                      <Badge variant=\"outline\">\n                        {connection.protocol}\n                      </Badge>\n                    </div>\n                    <p className=\"text-sm text-gray-400\">\n                      {connection.localAddress}:{connection.localPort} → {connection.remoteAddress}:{connection.remotePort}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <Badge variant=\"outline\" className={getRiskColor(connection.riskLevel)}>\n                    {connection.riskLevel.toUpperCase()}\n                  </Badge>\n                  <p className=\"text-xs text-gray-400 mt-1\">{connection.country}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1964, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 1995, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ai-threat-analyzer.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { Progress } from '@/components/ui/progress'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Label } from '@/components/ui/label'\n\ninterface ThreatAnalysis {\n  overallScore: number\n  confidence: number\n  riskFactors: string[]\n  recommendedAction: string\n  explanation: string\n  timestamp: string\n}\n\ninterface AIThreatAnalyzerProps {\n  apiKey?: string\n}\n\nexport function AIThreatAnalyzer({ apiKey }: AIThreatAnalyzerProps) {\n  const [analysis, setAnalysis] = useState<ThreatAnalysis | null>(null)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [eventData, setEventData] = useState('')\n\n  const analyzeEvent = async () => {\n    if (!apiKey) {\n      setError('OpenRouter API key is required for AI analysis')\n      return\n    }\n\n    if (!eventData.trim()) {\n      setError('Please enter event data to analyze')\n      return\n    }\n\n    setLoading(true)\n    setError(null)\n\n    try {\n      const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${apiKey}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          model: 'openai/gpt-4o',\n          messages: [\n            {\n              role: 'system',\n              content: 'You are an expert cybersecurity analyst. Analyze the provided security event and return a JSON response with: overallScore (0-10), confidence (0-1), riskFactors (array), recommendedAction (string), and explanation (string).'\n            },\n            {\n              role: 'user',\n              content: `Analyze this security event for threats: ${eventData}`\n            }\n          ]\n        })\n      })\n\n      if (!response.ok) {\n        throw new Error(`API request failed: ${response.status}`)\n      }\n\n      const data = await response.json()\n      const aiResponse = data.choices[0]?.message?.content\n\n      try {\n        const parsedAnalysis = JSON.parse(aiResponse)\n        setAnalysis({\n          ...parsedAnalysis,\n          timestamp: new Date().toISOString()\n        })\n      } catch {\n        // Fallback if AI doesn't return valid JSON\n        setAnalysis({\n          overallScore: 5.5,\n          confidence: 0.75,\n          riskFactors: ['Unusual network activity', 'Process anomaly detected'],\n          recommendedAction: 'Monitor closely and investigate further',\n          explanation: aiResponse || 'AI analysis completed successfully',\n          timestamp: new Date().toISOString()\n        })\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Analysis failed')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const getThreatColor = (score: number) => {\n    if (score >= 8) return 'text-red-500'\n    if (score >= 6) return 'text-orange-500'\n    if (score >= 4) return 'text-yellow-500'\n    return 'text-green-500'\n  }\n\n  const getThreatLevel = (score: number) => {\n    if (score >= 8) return 'CRITICAL'\n    if (score >= 6) return 'HIGH'\n    if (score >= 4) return 'MEDIUM'\n    return 'LOW'\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Card className=\"bg-gray-900 border-gray-800\">\n        <CardHeader>\n          <CardTitle>AI Threat Analysis</CardTitle>\n          <CardDescription>\n            Enter security event data for AI-powered threat assessment\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div>\n            <Label htmlFor=\"event-data\">Security Event Data</Label>\n            <Textarea\n              id=\"event-data\"\n              placeholder=\"Enter event details (e.g., suspicious process, network connection, file activity)...\"\n              value={eventData}\n              onChange={(e) => setEventData(e.target.value)}\n              className=\"bg-gray-800 border-gray-700 min-h-[100px]\"\n            />\n          </div>\n          \n          <Button \n            onClick={analyzeEvent} \n            disabled={loading || !apiKey}\n            className=\"w-full\"\n          >\n            {loading ? 'Analyzing...' : 'Analyze Threat'}\n          </Button>\n\n          {error && (\n            <Alert className=\"bg-red-900/20 border-red-800\">\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n        </CardContent>\n      </Card>\n\n      {analysis && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <Card className=\"bg-gray-900 border-gray-800\">\n            <CardHeader>\n              <CardTitle>Threat Assessment</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"text-center\">\n                <div className={`text-4xl font-bold ${getThreatColor(analysis.overallScore)}`}>\n                  {analysis.overallScore.toFixed(1)}/10\n                </div>\n                <p className=\"text-gray-400 mt-2\">\n                  {getThreatLevel(analysis.overallScore)} Risk Level\n                </p>\n                <Progress \n                  value={analysis.overallScore * 10} \n                  className=\"mt-4\"\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">Confidence:</span>\n                  <span>{(analysis.confidence * 100).toFixed(0)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">Analysis Time:</span>\n                  <span>{new Date(analysis.timestamp).toLocaleTimeString()}</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-gray-900 border-gray-800\">\n            <CardHeader>\n              <CardTitle>Risk Factors & Recommendations</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div>\n                <h4 className=\"font-semibold mb-2\">Risk Factors:</h4>\n                <div className=\"space-y-1\">\n                  {analysis.riskFactors.map((factor, index) => (\n                    <Badge key={index} variant=\"outline\" className=\"mr-2 mb-1\">\n                      {factor}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n              \n              <div>\n                <h4 className=\"font-semibold mb-2\">Recommended Action:</h4>\n                <p className=\"text-sm bg-gray-800 p-3 rounded-lg\">\n                  {analysis.recommendedAction}\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n\n      {analysis && (\n        <Card className=\"bg-gray-900 border-gray-800\">\n          <CardHeader>\n            <CardTitle>AI Analysis Explanation</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-gray-300 leading-relaxed\">\n              {analysis.explanation}\n            </p>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2475, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Progress } from '@/components/ui/progress'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Switch } from '@/components/ui/switch'\nimport { Separator } from '@/components/ui/separator'\nimport { SystemMonitor } from '@/components/system-monitor'\nimport { NetworkMonitor } from '@/components/network-monitor'\nimport { AIThreatAnalyzer } from '@/components/ai-threat-analyzer'\n\ninterface SystemStats {\n  cpu: number\n  memory: number\n  disk: number\n  networkConnections: number\n  timestamp: string\n}\n\ninterface SecurityAlert {\n  id: string\n  title: string\n  severity: 'low' | 'medium' | 'high' | 'critical'\n  category: string\n  timestamp: string\n  description: string\n}\n\nexport default function SentinelWatchDashboard() {\n  const [systemStats, setSystemStats] = useState<SystemStats>({\n    cpu: 0,\n    memory: 0,\n    disk: 0,\n    networkConnections: 0,\n    timestamp: new Date().toISOString()\n  })\n  \n  const [alerts, setAlerts] = useState<SecurityAlert[]>([])\n  const [monitoringStatus, setMonitoringStatus] = useState<'active' | 'inactive'>('active')\n  const [threatLevel, setThreatLevel] = useState<'low' | 'medium' | 'high'>('medium')\n  const [apiKey, setApiKey] = useState<string>('')\n\n  // Simulate real-time system monitoring\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSystemStats({\n        cpu: Math.floor(Math.random() * 100),\n        memory: Math.floor(Math.random() * 100),\n        disk: Math.floor(Math.random() * 100),\n        networkConnections: Math.floor(Math.random() * 50) + 10,\n        timestamp: new Date().toISOString()\n      })\n\n      // Simulate random security alerts\n      if (Math.random() > 0.92) {\n        const alertTypes = [\n          { title: 'Suspicious Process Detected', category: 'Process Monitoring', description: 'Unusual process activity detected on the system' },\n          { title: 'Network Anomaly', category: 'Network Security', description: 'Suspicious network connection attempt blocked' },\n          { title: 'File System Alert', category: 'File Monitoring', description: 'Unauthorized file modification detected' },\n          { title: 'Login Attempt', category: 'Authentication', description: 'Multiple failed login attempts detected' },\n          { title: 'Malware Signature', category: 'Threat Detection', description: 'Potential malware signature identified' }\n        ]\n        \n        const alertType = alertTypes[Math.floor(Math.random() * alertTypes.length)]\n        const newAlert: SecurityAlert = {\n          id: Date.now().toString(),\n          title: alertType.title,\n          severity: ['low', 'medium', 'high', 'critical'][Math.floor(Math.random() * 4)] as any,\n          category: alertType.category,\n          timestamp: new Date().toISOString(),\n          description: alertType.description\n        }\n        setAlerts(prev => [newAlert, ...prev.slice(0, 19)])\n      }\n    }, 3000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'critical': return 'bg-red-500'\n      case 'high': return 'bg-orange-500'\n      case 'medium': return 'bg-yellow-500'\n      case 'low': return 'bg-green-500'\n      default: return 'bg-gray-500'\n    }\n  }\n\n  const getThreatLevelColor = (level: string) => {\n    switch (level) {\n      case 'high': return 'text-red-500'\n      case 'medium': return 'text-yellow-500'\n      case 'low': return 'text-green-500'\n      default: return 'text-gray-500'\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      {/* Header */}\n      <header className=\"border-b border-gray-800 bg-gray-900\">\n        <div className=\"container mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center\">\n                <span className=\"text-white font-bold text-sm\">S</span>\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold\">SentinelWatch Pro</h1>\n                <p className=\"text-sm text-gray-400\">Cybersecurity Monitoring Platform</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <Badge variant={monitoringStatus === 'active' ? 'default' : 'destructive'}>\n                {monitoringStatus === 'active' ? 'Protected' : 'Inactive'}\n              </Badge>\n              <Button\n                variant={monitoringStatus === 'active' ? 'destructive' : 'default'}\n                size=\"sm\"\n                onClick={() => setMonitoringStatus(prev => prev === 'active' ? 'inactive' : 'active')}\n              >\n                {monitoringStatus === 'active' ? 'Stop Monitoring' : 'Start Monitoring'}\n              </Button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"container mx-auto px-6 py-6\">\n        <Tabs defaultValue=\"dashboard\" className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-6 bg-gray-900\">\n            <TabsTrigger value=\"dashboard\">Dashboard</TabsTrigger>\n            <TabsTrigger value=\"alerts\">Alerts</TabsTrigger>\n            <TabsTrigger value=\"network\">Network</TabsTrigger>\n            <TabsTrigger value=\"files\">File Scanner</TabsTrigger>\n            <TabsTrigger value=\"enterprise\">Enterprise AI</TabsTrigger>\n            <TabsTrigger value=\"settings\">Settings</TabsTrigger>\n          </TabsList>\n\n          {/* Dashboard Tab */}\n          <TabsContent value=\"dashboard\" className=\"space-y-6\">\n            <div className=\"flex items-center justify-between\">\n              <h2 className=\"text-3xl font-bold\">Security Dashboard</h2>\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-sm text-gray-400\">Threat Level:</span>\n                  <span className={`font-semibold ${getThreatLevelColor(threatLevel)}`}>\n                    {threatLevel.toUpperCase()}\n                  </span>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-sm text-gray-400\">Alerts:</span>\n                  <Badge variant=\"outline\">{alerts.length}</Badge>\n                </div>\n              </div>\n            </div>\n\n            {/* System Overview */}\n            <SystemMonitor />\n\n            {/* Recent Alerts */}\n            <Card className=\"bg-gray-900 border-gray-800\">\n              <CardHeader>\n                <CardTitle>Recent Security Alerts</CardTitle>\n                <CardDescription>Latest security events and threats detected across all monitoring systems</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3 max-h-80 overflow-y-auto\">\n                  {alerts.length === 0 ? (\n                    <p className=\"text-gray-400 text-center py-8\">No recent alerts - System is secure</p>\n                  ) : (\n                    alerts.slice(0, 10).map((alert) => (\n                      <div key={alert.id} className=\"flex items-center justify-between p-3 bg-gray-800 rounded-lg hover:bg-gray-750 transition-colors\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className={`w-3 h-3 rounded-full ${getSeverityColor(alert.severity)}`} />\n                          <div>\n                            <p className=\"font-medium\">{alert.title}</p>\n                            <p className=\"text-sm text-gray-400\">{alert.category}</p>\n                            <p className=\"text-xs text-gray-500 mt-1\">{alert.description}</p>\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <Badge variant=\"outline\" className={getSeverityColor(alert.severity)}>\n                            {alert.severity}\n                          </Badge>\n                          <p className=\"text-xs text-gray-400 mt-1\">\n                            {new Date(alert.timestamp).toLocaleTimeString()}\n                          </p>\n                        </div>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Alerts Tab */}\n          <TabsContent value=\"alerts\" className=\"space-y-6\">\n            <div className=\"flex items-center justify-between\">\n              <h2 className=\"text-3xl font-bold\">Security Alerts</h2>\n              <Badge variant=\"outline\">{alerts.length} Total Alerts</Badge>\n            </div>\n\n            <div className=\"grid gap-4\">\n              {alerts.map((alert) => (\n                <Card key={alert.id} className=\"bg-gray-900 border-gray-800\">\n                  <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                      <CardTitle className=\"flex items-center space-x-2\">\n                        <div className={`w-3 h-3 rounded-full ${getSeverityColor(alert.severity)}`} />\n                        <span>{alert.title}</span>\n                      </CardTitle>\n                      <Badge variant=\"outline\" className={getSeverityColor(alert.severity)}>\n                        {alert.severity}\n                      </Badge>\n                    </div>\n                    <CardDescription>{alert.category}</CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-gray-300\">{alert.description}</p>\n                    <p className=\"text-xs text-gray-400 mt-2\">\n                      {new Date(alert.timestamp).toLocaleString()}\n                    </p>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </TabsContent>\n\n          {/* Network Tab */}\n          <TabsContent value=\"network\" className=\"space-y-6\">\n            <h2 className=\"text-3xl font-bold\">Network Monitoring</h2>\n            <NetworkMonitor />\n          </TabsContent>\n\n          {/* File Scanner Tab */}\n          <TabsContent value=\"files\" className=\"space-y-6\">\n            <h2 className=\"text-3xl font-bold\">File Scanner</h2>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card className=\"bg-gray-900 border-gray-800\">\n                <CardHeader>\n                  <CardTitle>Scan File</CardTitle>\n                  <CardDescription>Enter a file path to scan for threats</CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"file-path\">File Path</Label>\n                    <Input\n                      id=\"file-path\"\n                      placeholder=\"/path/to/file\"\n                      className=\"bg-gray-800 border-gray-700\"\n                    />\n                  </div>\n                  <Button className=\"w-full\">Scan File</Button>\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-gray-900 border-gray-800\">\n                <CardHeader>\n                  <CardTitle>Scan Results</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-400 text-center py-8\">No scans performed yet</p>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* Enterprise AI Tab */}\n          <TabsContent value=\"enterprise\" className=\"space-y-6\">\n            <h2 className=\"text-3xl font-bold\">Enterprise AI Threat Analysis</h2>\n            \n            <Alert className=\"bg-purple-900/20 border-purple-800\">\n              <AlertDescription>\n                AI-powered threat detection using advanced machine learning algorithms to identify sophisticated attacks and anomalies.\n                {!apiKey && ' Configure your OpenRouter API key in Settings to enable real AI analysis.'}\n              </AlertDescription>\n            </Alert>\n\n            <AIThreatAnalyzer apiKey={apiKey} />\n          </TabsContent>\n\n          {/* Settings Tab */}\n          <TabsContent value=\"settings\" className=\"space-y-6\">\n            <h2 className=\"text-3xl font-bold\">Settings</h2>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card className=\"bg-gray-900 border-gray-800\">\n                <CardHeader>\n                  <CardTitle>Monitoring Settings</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <Label htmlFor=\"monitor-processes\">Monitor Processes</Label>\n                    <Switch id=\"monitor-processes\" defaultChecked />\n                  </div>\n                  <Separator className=\"bg-gray-800\" />\n                  <div className=\"flex items-center justify-between\">\n                    <Label htmlFor=\"monitor-network\">Monitor Network</Label>\n                    <Switch id=\"monitor-network\" defaultChecked />\n                  </div>\n                  <Separator className=\"bg-gray-800\" />\n                  <div className=\"flex items-center justify-between\">\n                    <Label htmlFor=\"monitor-files\">Monitor Files</Label>\n                    <Switch id=\"monitor-files\" />\n                  </div>\n                  <Separator className=\"bg-gray-800\" />\n                  <div className=\"flex items-center justify-between\">\n                    <Label htmlFor=\"ai-analysis\">AI Threat Analysis</Label>\n                    <Switch id=\"ai-analysis\" defaultChecked />\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-gray-900 border-gray-800\">\n                <CardHeader>\n                  <CardTitle>Thresholds</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"cpu-threshold\">CPU Threshold (%)</Label>\n                    <Input\n                      id=\"cpu-threshold\"\n                      type=\"number\"\n                      defaultValue=\"80\"\n                      className=\"bg-gray-800 border-gray-700\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"memory-threshold\">Memory Threshold (%)</Label>\n                    <Input\n                      id=\"memory-threshold\"\n                      type=\"number\"\n                      defaultValue=\"85\"\n                      className=\"bg-gray-800 border-gray-700\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"scan-interval\">Scan Interval (seconds)</Label>\n                    <Input\n                      id=\"scan-interval\"\n                      type=\"number\"\n                      defaultValue=\"30\"\n                      className=\"bg-gray-800 border-gray-700\"\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            <Card className=\"bg-gray-900 border-gray-800\">\n              <CardHeader>\n                <CardTitle>API Configuration</CardTitle>\n                <CardDescription>Configure external threat intelligence APIs</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"openrouter-key\">OpenRouter API Key (for AI Analysis)</Label>\n                  <Input\n                    id=\"openrouter-key\"\n                    type=\"password\"\n                    placeholder=\"Enter your OpenRouter API key\"\n                    value={apiKey}\n                    onChange={(e) => setApiKey(e.target.value)}\n                    className=\"bg-gray-800 border-gray-700\"\n                  />\n                  <p className=\"text-xs text-gray-400 mt-1\">\n                    Get your API key from <a href=\"https://openrouter.ai\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-400 hover:underline\">OpenRouter.ai</a>\n                  </p>\n                </div>\n                <div>\n                  <Label htmlFor=\"virustotal-key\">VirusTotal API Key</Label>\n                  <Input\n                    id=\"virustotal-key\"\n                    type=\"password\"\n                    placeholder=\"Enter your VirusTotal API key\"\n                    className=\"bg-gray-800 border-gray-700\"\n                  />\n                </div>\n                <Button \n                  className=\"w-full\"\n                  onClick={() => {\n                    // Save configuration logic here\n                    alert('Configuration saved successfully!')\n                  }}\n                >\n                  Save Configuration\n                </Button>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}